/**
 * Created by: jonwink
 * Creation date: 26.03.2015
 *
 * DXL Editor is provided by SODIUS (www.sodius.com)
 */
pragma encoding, "UTF-8"
pragma runLim,0

void exportModuleToCSV(Module m, string fileName) {
	current = m
	filtering off
	
	Skip attrs = create

	AttrDef ad
	AttrType at
	AttrBaseType abt
	
	for ad in m do {
		if (isVisibleAttribute(ad)) {
			put(attrs, ad, ad)
		}
	}
	
	Stream outFile = write(fileName, CP_UTF8)
	
	outFile << "\"Object Identifier\", \"Object Level\", \"Object Number\""
	
	
	for ad in attrs do {
		outFile << ", \"" ad.name "\""
	}
	
	outFile << ", \"DOORS_LINKS\""
	
	outFile << "\n"
	
	Object o
	
	for o in m do {
		
		outFile << "\"" identifier(o) "\", " level(o) ", \"" number(o) "\""
		
		for ad in attrs do {
			
			at = ad.type
			abt = at.type
			
			if (abt == attrInteger || abt == attrReal) {
				outFile << ", " o.(ad.name) ""
			} else {
				outFile << ", \"" escape(o.(ad.name) "",'\\',"\"") "\""
			}
		}
		
		outFile << ", \""
		
		Link outLink
		bool firstLink = true
		for outLink in o -> "*" do {
			Object t = target(outLink)
			outFile << (firstLink?"":"\n") name(module(t)) ":" identifier(t)
			firstLink = false
		}

		outFile << "\"\n"
		
	}
	
	close outFile
}

void exportModuleMetaData(Module m, string fileName) {
	
	Stream outFile = write(fileName)
		
	AttrDef ad
	
	for ad in m do {
		if (ad.module) {
			outFile << "\"" ad.name "\", \"" escape(m.(ad.name) "",'\\',"\"") "\"\n"
		}
	}
	outFile << "\"url\", \"" getURL(m) "\"\n"
	outFile << "\"path\", \"" path(m) "\"\n" 

	close outFile
	
}
